{"version":3,"file":"static/js/146.394fd8ef.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/Contacs/Contacs.module.css?0912","pages/Contacs/Contacs.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__AGsap\",\"title\":\"ContactForm_title__9Cjr6\",\"input\":\"ContactForm_input__kLyl+\",\"btnSubmit\":\"ContactForm_btnSubmit__oDlOc\"};","import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addContacts } from 'redux/contacts/contactsOperation';\r\nimport css from './ContactForm.module.css';\r\n\r\nconst ContactForm = () => {\r\n  const contacts = useSelector(state => state.contacts.entities);\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const addContact = ({ name, number }) => {\r\n    if (\r\n      contacts.find(contact => {\r\n        return contact.name.toLowerCase() === name.toLowerCase() || contact.number === number;\r\n      })\r\n    ) {\r\n      return alert(`${name} is already in contacts`);\r\n    }\r\n    dispatch(addContacts({ name, number }));\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    addContact({ name, number });\r\n    resetForm();\r\n  };\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={css.form}>\r\n      <label>\r\n       <p className={css.title}>Name</p> \r\n        <input type=\"text\" value={name} name=\"name\" onChange={handleChange} className={css.input} required />\r\n      </label>\r\n      <label >\r\n        <p className={css.title}>Number</p> \r\n        <input type=\"tel\" value={number} name=\"number\" onChange={handleChange} required />\r\n      </label>\r\n      <button type=\"submit\" className={css.btnSubmit}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactForm;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__D9Eo1\",\"item\":\"ContactList_item__chhA+\",\"text\":\"ContactList_text__rcDDX\",\"btnDelete\":\"ContactList_btnDelete__AAbvn\"};","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport css from './ContactList.module.css';\r\nimport { deleteContacts } from 'redux/contacts/contactsOperation';\r\nimport * as contactsOperations from '../../redux/contacts/contactsOperation';\r\n\r\nconst ContactList = () => {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(state => state.contacts.entities);\r\n  const filter = useSelector(state => state.filter.filter);\r\n\r\n  const filterContact = contacts.filter(contact => {\r\n    return contact.name.toLowerCase().includes(filter.toLowerCase());\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.fetchContacts());\r\n  }, [dispatch]);\r\n\r\n\r\n\r\n  return (\r\n    <ul className={css.list}>\r\n      {filterContact.length > 0 &&\r\n        filterContact.map(({ id, name, number }) => (\r\n          <li className={css.item} key={id}>\r\n            <p className={css.text}>\r\n              {name}: {number}\r\n            </p>\r\n            <button\r\n              className={css.btnDelete}\r\n              type=\"button\"\r\n              onClick={() => {\r\n                dispatch(deleteContacts(id));\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Filter_title__6Dm9v\",\"input\":\"Filter_input__dzCnM\"};","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { contactFilter } from 'redux/filter/filterSlice';\r\n\r\nimport css from './Filter.module.css';\r\n\r\nconst Filter = () => {\r\nconst dispatch = useDispatch();\r\n\r\n  const onChange = e => {\r\n  dispatch(contactFilter(e.target.value));\r\n  };\r\n  return (\r\n    <>\r\n      <p className={css.title}>Find contacts by name</p>\r\n      <input\r\n        className={css.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        onChange={onChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default Filter;\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Contacs_container__cze7I\",\"title\":\"Contacs_title__JwMWM\"};","import { Outlet } from 'react-router-dom';\r\nimport ContactForm from 'components/ContactForm/ContactForm';\r\nimport ContactList from 'components/ContactList/ContactList';\r\nimport Filter from 'components/Filter/Filter';\r\nimport css from './Contacs.module.css';\r\n\r\n  export default function Contacs(){\r\n  return (\r\n    <main className={css.container}>\r\n      <div className={css.container}>\r\n        <h1 className={css.title}>Phonebook</h1>\r\n        <ContactForm />\r\n        <h2 className={css.title}>Contacts</h2>\r\n        <Filter />\r\n        <ContactList />\r\n      </div>\r\n      <Outlet />\r\n    </main>\r\n  );\r\n};\r\n\r\n"],"names":["contacts","useSelector","state","entities","dispatch","useDispatch","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","resetForm","onSubmit","preventDefault","find","contact","toLowerCase","alert","addContacts","addContact","className","css","type","onChange","required","filter","filterContact","includes","useEffect","contactsOperations","length","map","id","onClick","deleteContacts","pattern","contactFilter","target","Contacs"],"sourceRoot":""}