{"version":3,"file":"static/js/146.86b5afad.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/Contacs/Contacs.module.css?0912","pages/Contacs/Contacs.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/shortid/index.js","../node_modules/shortid/lib/alphabet.js","../node_modules/shortid/lib/build.js","../node_modules/shortid/lib/generate.js","../node_modules/shortid/lib/index.js","../node_modules/shortid/lib/is-valid.js","../node_modules/shortid/lib/random/random-byte-browser.js","../node_modules/shortid/lib/random/random-from-seed.js","../node_modules/shortid/lib/util/cluster-worker-id-browser.js","../node_modules/shortid/node_modules/nanoid/format.browser.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ContactForm_container__7wNUV\",\"title\":\"ContactForm_title__9Cjr6\",\"input\":\"ContactForm_input__kLyl+\",\"btnSubmit\":\"ContactForm_btnSubmit__oDlOc\"};","import React from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addContacts } from 'redux/contacts/contactsOperation';\r\nimport css from './ContactForm.module.css';\r\n\r\nexport default function ContactForm() {\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const formNameChange = e => {\r\n    setName(e.currentTarget.value);\r\n  };\r\n\r\n  const formNumberChange = e => {\r\n    setNumber(e.currentTarget.value);\r\n  };\r\n\r\n  const formSubmit = e => {\r\n    e.preventDefault();\r\n    dispatch(addContacts({ name, number }));\r\n    e.currentTarget.reset();\r\n  };\r\n\r\n  return (\r\n    <div className={css.container}>\r\n      <form onSubmit={formSubmit}>\r\n        <p className={css.title}>Name</p>\r\n        <input\r\n          className={css.input}\r\n          placeholder=\"Contact Name\"\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n          onChange={formNameChange}\r\n        />\r\n        <p className={css.title}>Number</p>\r\n        <input\r\n          className={css.input}\r\n          placeholder=\" 257-42-21\"\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          onChange={formNumberChange}\r\n        />\r\n        <button type=\"submit\" className={css.btnSubmit}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__D9Eo1\",\"item\":\"ContactList_item__chhA+\",\"text\":\"ContactList_text__rcDDX\",\"btnDelete\":\"ContactList_btnDelete__AAbvn\"};","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport css from './ContactList.module.css';\r\nimport { deleteContacts } from 'redux/contacts/contactsOperation';\r\nconst ContactList = ({ filter }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <ul className={css.list}>\r\n      {filter.length > 0 &&\r\n        filter.map(({ id, name, number }) => (\r\n          <li className={css.item} key={id}>\r\n            <p className={css.text}>\r\n              {name}: {number}\r\n            </p>\r\n            <button\r\n              className={css.btnDelete}\r\n              type=\"button\"\r\n              onClick={() => {\r\n                dispatch(deleteContacts(id));\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n    </ul>\r\n  );\r\n};\r\nContactList.prototype = {\r\n  filter: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.number.isRequired,\r\n    })\r\n  ),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\nexport default ContactList;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Filter_title__6Dm9v\",\"input\":\"Filter_input__dzCnM\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\nimport { contactFilter } from 'redux/filter/filterSlice';\r\n\r\nimport css from './Filter.module.css';\r\n\r\nconst Filter = () => {\r\nconst dispatch = useDispatch();\r\n\r\n  const onChange = e => {\r\n  dispatch(contactFilter(e.target.value));\r\n  };\r\n  return (\r\n    <>\r\n      <p className={css.title}>Find contacts by name</p>\r\n      <input\r\n        className={css.input}\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        onChange={onChange}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nFilter.prototype = {\r\n  value: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n\r\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Contacs_container__cze7I\"};","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Outlet } from 'react-router-dom';\r\nimport shortid from 'shortid';\r\nimport ContactForm from 'components/ContactForm/ContactForm';\r\nimport ContactList from 'components/ContactList/ContactList';\r\nimport Filter from 'components/Filter/Filter';\r\nimport { contactFilter } from 'redux/filter/filterSlice';\r\nimport * as contactsOperations from '../../redux/contacts/contactsOperation';\r\nimport css from './Contacs.module.css';\r\n\r\nconst Contacs = () => {\r\n  const contacts = useSelector(state => state.contacts.entities);\r\n  const filter = useSelector(state => state.filter.filter);\r\n  const dispatch = useDispatch();\r\n const addContact = ({ name, number }, contacts) => {\r\n  const isDuplicate = contacts.some(\r\n    contact =>\r\n      contact.name.toLowerCase() === name.toLowerCase() || contact.number === number\r\n  );\r\n  if (isDuplicate) {\r\n    alert(`${name} is already in contacts`);\r\n    return;\r\n  }\r\n\r\n  const contact = {\r\n    id: shortid.generate(),\r\n    name,\r\n    number,\r\n  };\r\n  dispatch(contactsOperations.addContacts(contact));\r\n};\r\n\r\n  const filterChange = e => {\r\n    dispatch(contactFilter(e.currentTarget.value));\r\n  };\r\n  const filterContact = contacts.filter(contact => {\r\n    return contact.name.toLowerCase().includes(filter.toLowerCase());\r\n  });\r\n  useEffect(() => {\r\n    dispatch(contactsOperations.fetchContacts());\r\n  }, [dispatch]);\r\n  return (\r\n    <main className={css.container}>\r\n      <div className={css.container}>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm addContact={addContact} />\r\n        <h2>Contacts</h2>\r\n        <Filter filter={filterChange} />\r\n        <ContactList filter={filterContact} />\r\n      </div>\r\n      <Outlet />\r\n    </main>\r\n  );\r\n};\r\nexport default Contacs;\r\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nfunction get () {\n  return alphabet || ORIGINAL;\n}\n\nmodule.exports = {\n    get: get,\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar generate = require('./generate');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1567752802062;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 7;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + generate(version);\n    str = str + generate(clusterWorkerId);\n    if (counter > 0) {\n        str = str + generate(counter);\n    }\n    str = str + generate(seconds);\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar random = require('./random/random-byte');\nvar format = require('nanoid/format');\n\nfunction generate(number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + format(random, alphabet.get(), 1);\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = generate;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.isValid = isValid;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var nonAlphabetic = new RegExp('[^' +\n      alphabet.get().replace(/[|\\\\{}()[\\]^$+*?.-]/g, '\\\\$&') +\n    ']');\n    return !nonAlphabetic.test(id);\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nvar randomByte;\n\nif (!crypto || !crypto.getRandomValues) {\n    randomByte = function(size) {\n        var bytes = [];\n        for (var i = 0; i < size; i++) {\n            bytes.push(Math.floor(Math.random() * 256));\n        }\n        return bytes;\n    };\n} else {\n    randomByte = function(size) {\n        return crypto.getRandomValues(new Uint8Array(size));\n    };\n}\n\nmodule.exports = randomByte;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nmodule.exports = 0;\n","// This file replaces `format.js` in bundlers like webpack or Rollup,\n// according to `browser` config in `package.json`.\n\nmodule.exports = function (random, alphabet, size) {\n  // We can’t use bytes bigger than the alphabet. To make bytes values closer\n  // to the alphabet, we apply bitmask on them. We look for the closest\n  // `2 ** x - 1` number, which will be bigger than alphabet size. If we have\n  // 30 symbols in the alphabet, we will take 31 (00011111).\n  // We do not use faster Math.clz32, because it is not available in browsers.\n  var mask = (2 << Math.log(alphabet.length - 1) / Math.LN2) - 1\n  // Bitmask is not a perfect solution (in our example it will pass 31 bytes,\n  // which is bigger than the alphabet). As a result, we will need more bytes,\n  // than ID size, because we will refuse bytes bigger than the alphabet.\n\n  // Every hardware random generator call is costly,\n  // because we need to wait for entropy collection. This is why often it will\n  // be faster to ask for few extra bytes in advance, to avoid additional calls.\n\n  // Here we calculate how many random bytes should we call in advance.\n  // It depends on ID length, mask / alphabet size and magic number 1.6\n  // (which was selected according benchmarks).\n\n  // -~f => Math.ceil(f) if n is float number\n  // -~i => i + 1 if n is integer number\n  var step = -~(1.6 * mask * size / alphabet.length)\n  var id = ''\n\n  while (true) {\n    var bytes = random(step)\n    // Compact alternative for `for (var i = 0; i < step; i++)`\n    var i = step\n    while (i--) {\n      // If random byte is bigger than alphabet even after bitmask,\n      // we refuse it by `|| ''`.\n      id += alphabet[bytes[i] & mask] || ''\n      // More compact than `id.length + 1 === size`\n      if (id.length === +size) return id\n    }\n  }\n}\n"],"names":["ContactForm","dispatch","useDispatch","useState","name","setName","number","setNumber","className","css","onSubmit","e","preventDefault","addContacts","currentTarget","reset","placeholder","type","pattern","title","required","onChange","value","ContactList","filter","length","map","id","onClick","deleteContacts","prototype","PropTypes","onDeleteContact","Filter","contactFilter","target","contacts","useSelector","state","entities","filterContact","contact","toLowerCase","includes","useEffect","contactsOperations","addContact","isDuplicate","some","alert","shortid","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","alphabet","previousSeed","shuffled","randomFromSeed","ORIGINAL","setCharacters","_alphabet_","unique","split","item","ind","arr","lastIndexOf","join","getShuffled","characterIndex","sourceArray","targetArray","r","nextValue","Math","floor","push","splice","shuffle","get","characters","seed","lookup","index","counter","previousSeconds","generate","clusterWorkerId","str","seconds","Date","now","random","format","done","loopCounter","pow","build","isValid","seedValue","worker","workerId","newCharacters","undefined","RegExp","replace","test","randomByte","crypto","window","msCrypto","getRandomValues","size","Uint8Array","bytes","i","_seed_","mask","log","LN2","step"],"sourceRoot":""}