{"version":3,"file":"static/js/146.8f2e6462.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/pages/Contacs/Contacs.module.css?0912","pages/Contacs/Contacs.jsx","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"title\":\"ContactForm_title__jZguf\",\"input\":\"ContactForm_input__Bl93P\",\"btnSubmit\":\"ContactForm_btnSubmit__+7wnS\"};","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContacts } from 'redux/contacts/contactsOperation';\nimport css from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const contacts = useSelector(state => state.contacts.entities);\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const addContact = ({ name, number }) => {\n    if (\n      contacts.find(contact => {\n        return contact.name.toLowerCase() === name.toLowerCase() || contact.number === number;\n      })\n    ) {\n      return alert(`${name} is already in contacts`);\n    }\n    dispatch(addContacts({ name, number }));\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addContact({ name, number });\n    resetForm();\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={css.form}>\n      <label>\n       <p className={css.title}>Name</p> \n        <input type=\"text\" value={name} name=\"name\" onChange={handleChange} className={css.input} required />\n      </label>\n      <label >\n        <p className={css.title}>Number</p> \n        <input type=\"tel\" value={number} name=\"number\" onChange={handleChange} required />\n      </label>\n      <button type=\"submit\" className={css.btnSubmit}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"text\":\"ContactList_text__+NWAW\",\"btnDelete\":\"ContactList_btnDelete__Eeo9v\"};","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport css from './ContactList.module.css';\nimport { deleteContacts } from 'redux/contacts/contactsOperation';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.entities);\n  const filter = useSelector(state => state.filter.filter);\n\n  const filterContact = contacts.filter(contact => {\n    return contact.name.toLowerCase().includes(filter.toLowerCase());\n  });\n\n  return (\n    <ul className={css.list}>\n      {filterContact.length > 0 &&\n        filterContact.map(({ id, name, number }) => (\n          <li className={css.item} key={id}>\n            <p className={css.text}>\n              {name}: {number}\n            </p>\n            <button\n              className={css.btnDelete}\n              type=\"button\"\n              onClick={() => {\n                dispatch(deleteContacts(id));\n              }}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n    </ul>\n  );\n};\n\nContactList.prototype = {\n  filter: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.number.isRequired,\n    })\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\nexport default ContactList;","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Filter_title__pSkfx\",\"input\":\"Filter_input__N7T3z\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { contactFilter } from 'redux/filter/filterSlice';\n\nimport css from './Filter.module.css';\n\nconst Filter = () => {\nconst dispatch = useDispatch();\n\n  const onChange = e => {\n  dispatch(contactFilter(e.target.value));\n  };\n  return (\n    <>\n      <p className={css.title}>Find contacts by name</p>\n      <input\n        className={css.input}\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        onChange={onChange}\n      />\n    </>\n  );\n};\n\nFilter.prototype = {\n  value: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Contacs_container__C0xAL\",\"title\":\"Contacs_title__W7TV4\"};","import { Outlet } from 'react-router-dom';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport ContactList from 'components/ContactList/ContactList';\nimport Filter from 'components/Filter/Filter';\nimport css from './Contacs.module.css';\n\n  export default function Contacs(){\n  return (\n    <main className={css.container}>\n      <div className={css.container}>\n        <h1 className={css.title}>Phonebook</h1>\n        <ContactForm />\n        <h2 className={css.title}>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </div>\n      <Outlet />\n    </main>\n  );\n};\n\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["contacts","useSelector","state","entities","dispatch","useDispatch","useState","name","setName","number","setNumber","handleChange","e","currentTarget","value","resetForm","onSubmit","preventDefault","find","contact","toLowerCase","alert","addContacts","addContact","className","css","type","onChange","required","ContactList","filter","filterContact","includes","length","map","id","onClick","deleteContacts","prototype","PropTypes","onDeleteContact","Filter","pattern","contactFilter","target","Contacs","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}